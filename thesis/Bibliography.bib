% This file was created with Citavi 6.14.0.0

@proceedings{.2019,
	year = {2019},
	title = {2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)},
	publisher = {IEEE},
	isbn = {978-1-7281-2519-0}
}


@www{Archiveddocs.20230201,
	author = {Archiveddocs},
	year = {2023-02-01},
	title = {Hyper-V Replica Feature Overview},
	url = {https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh831716(v=ws.11)},
	urldate = {2023-02-01}
}


@www{Cwilhit.20221121,
	abstract = {Explanation of how Hyper-V isolation differ from process isolated containers.},
	editor = {Microsoft},
	year = {2022},
	title = {Isolation Modes: Windows Container Essentials: Documentation},
	url = {https://learn.microsoft.com/en-us/virtualization/windowscontainers/manage-containers/hyperv-container},
	urldate = {2022-11-21},
	addendum = {Documentation}
}


@www{DockerDocumentation.20230131,
	abstract = {Docker Engine swarm mode overview},
	author = {{Docker Documentation}},
	year = {2023-01-31},
	title = {Swarm mode overview},
	url = {https://docs.docker.com/engine/swarm/},
	urldate = {2023-02-01}
}


@www{Furtado.2018,
	author = {Furtado, Paul},
	editor = {{Hacker News}},
	year = {2018},
	title = {Disabling Docker ICC still allows raw ethernet communication between containers},
	url = {https://news.ycombinator.com/item?id=16427686}
}


@www{Github.2022_258,
	author = {amaltinsky},
	year = {2022},
	title = {Windows Containers Issue: Windows Server 2022 container on Windows 10 (10.0.19044) host.},
	url = {https://github.com/microsoft/Windows-Containers/issues/258},
	urldate = {2022-10-18},
	institution = {GitHub}
}


@www{GitHub.20221103,
	abstract = {An open and reliable container runtime.},
	author = {GitHub},
	year = {2022-11-03},
	title = {ContainerD Architecture},
	url = {https://github.com/containerd/containerd/blob/main/docs/cri/architecture.md},
	keywords = {containerd},
	urldate = {2022-11-03}
}


@www{GitHub.20230202,
	abstract = {Describe the bug In the guide for adding windows nodes (link) in section {\textquotedbl}Getting started: Adding a Windows Node to Your Cluster{\textquotedbl} there is a dead link to the RBAC file. https://raw.githubusercontent.com/kubernetes-sigs/sig-windows-tools/...},
	author = {GitHub},
	year = {2023-02-02},
	title = {Guide for adding windows node: RBAC config not found: Issue {\#}261 - kubernetes-sigs/sig-windows-tools},
	url = {https://github.com/kubernetes-sigs/sig-windows-tools/issues/261},
	urldate = {2023-02-02}
}


@www{GitHub.20230202b,
	abstract = {Describe the bug Flannel and kube-proxy pods do not start. To Reproduce setup on-premise cluster (v1.19.0) with flannel (vxlan) flannel image: vleschenko/flannel:0.13.0 (it is support WS2004) kubeproxy image: vleschenko/kube-proxy:v1.19....},
	author = {GitHub},
	year = {2023-02-02},
	title = {Windows node with ContainerD can't run flannel and kubeproxy daemonsets: Issue {\#}128 - kubernetes-sigs/sig-windows-tools},
	url = {https://github.com/kubernetes-sigs/sig-windows-tools/issues/128},
	urldate = {2023-02-02}
}


@www{GitHub.20230202c,
	abstract = {Describe the bug Following this guide for Kubernetes 1.26.0 the kube-flannel pod for linux is failing to start after a restart of the control plane (where the pod was running on). I no longer have the actual error message but the problem...},
	author = {GitHub},
	year = {2023-02-02},
	title = {kube-flannel for linux fails to (re)start after rbac for kube-flannel for windows is applied: Issue {\#}277 - kubernetes-sigs/sig-windows-tools},
	url = {https://github.com/kubernetes-sigs/sig-windows-tools/issues/277},
	urldate = {2023-02-02}
}


@www{GoogleCloud.20220930,
	abstract = {Erstellung von Images in containerd},
	author = {{Google Cloud}},
	year = {2022-09-30},
	title = {Knoten-Images von Containerd | Google Kubernetes Engine (GKE)},
	url = {https://cloud.google.com/kubernetes-engine/docs/concepts/using-containerd?hl=de},
	urldate = {2022-11-03}
}


@proceedings{InstituteofElectricalandElectronicsEngineers.2019,
	year = {2019},
	title = {Proceedings of the International Conference on Trends in Electronics and Informatics (ICOEI 2019): 23-25 April 2019},
	address = {Piscataway, NJ},
	publisher = {IEEE},
	isbn = {978-1-5386-9439-8},
	institution = {{Institute of Electrical and Electronics Engineers}},
	doi = {10.1109/ICOEI45924.2019}
}


@article{Kang.2021,
	author = {Kang, Byungseok and Jeong, Jaeyeop and Choo, Hyunseung},
	year = {2021},
	title = {Docker Swarm and Kubernetes Containers for Smart Home Gateway},
	pages = {75--80},
	pagination = {page},
	volume = {23},
	number = {4},
	issn = {1520-9202},
	journal = {IT Professional},
	doi = {10.1109/MITP.2020.3034116}
}


@www{Kubernetes.2020,
	author = {Kubernetes},
	year = {2020},
	title = {Don't Panic: Kubernetes and Docker},
	url = {https://kubernetes.io/blog/2020/12/02/dont-panic-kubernetes-and-docker/},
	urldate = {2023-02-02}
}


@inproceedings{Kwan.2019,
	author = {Kwan, Anthony and Wong, Jonathon and Jacobsen, Hans-Arno and Muthusamy, Vinod},
	title = {HyScale: Hybrid and Network Scaling of Dockerized Microservices in Cloud Data Centres},
	pages = {80--90},
	bookpagination = {page},
	publisher = {IEEE},
	isbn = {978-1-7281-2519-0},
	booktitle = {2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)},
	year = {2019},
	doi = {10.1109/ICDCS.2019.00017}
}


@book{Luksa.2018,
	abstract = {Mit Kubernetes gro{\ss}e Container-Infrastrukturen ausfallsicher verwalten Nach einer Einf{\"u}hrung in die typischen Problemstellungen, mit denen Softwareentwickler und Administratoren konfrontiert sind, und wie diese mit Kubernetes gel{\"o}st werden k{\"o}nnen, lernen Sie in einem ersten Beispielprojekt die praktische Umsetzung. Es wird gezeigt, wie eine einfache in einem Container laufende Web-Applikation {\"u}ber ein Kubernetes-Cluster verwaltet werden kann. Im zweiten Teil des Buches lernen Sie die zu Grunde liegenden Konzepte kennen, deren Verst{\"a}ndnis unbedingt notwendig ist, um gro{\ss}e Container-Cluster mit Kubernetes zu betreiben. Im letzten Teil wird die Funktionsweise von Kubernetes beschrieben und auf weiterf{\"u}hrende Aspekte eingegangen. Hier wird au{\ss}erdem das erworbene Wissen aus den ersten beiden Teilen zusammengef{\"u}hrt, damit Sie den vollen Nutzen aus der Kubernetes-Plattform ziehen k{\"o}nnen.},
	author = {Luk{\v{s}}a, Marko},
	year = {2018},
	title = {Kubernetes in action: Anwendungen in Kubernetes-Clustern bereitstellen und verwalten},
	url = {https://www.hanser-elibrary.com/doi/book/10.3139/9783446456020},
	address = {M{\"u}nchen},
	publisher = {Hanser},
	isbn = {9783446456020},
	series = {Hanser eLibrary},
	doi = {10.3139/9783446456020}
}


@inproceedings{Marathe.2019,
	author = {Marathe, Nikhil and Gandhi, Ankita and Shah, Jaimeel M.},
	title = {Docker Swarm and Kubernetes in Cloud Computing Environment},
	pages = {179--184},
	bookpagination = {page},
	publisher = {IEEE},
	isbn = {978-1-5386-9439-8},
	booktitle = {Proceedings of the International Conference on Trends in Electronics and Informatics (ICOEI 2019)},
	year = {2019},
	address = {Piscataway, NJ},
	doi = {10.1109/ICOEI.2019.8862654}
}


@article{Shabani.2021,
	abstract = {- Entwicklung eines E-Shops in zwei verschiedenen Architekturvarianten und Vergleich dessen.},
	author = {Shabani, Isak and M{\"e}ziu, Endrit and Berisha, Blend and Biba, Tonit},
	year = {2021},
	title = {Design of Modern Distributed Systems based on Microservices Architecture},
	url = {https://www.researchgate.net/profile/Blend-Berisha/publication/349749418_Design_of_Modern_Distributed_Systems_based_on_Microservices_Architecture/links/6064be8592851c91b1944ff4/Design-of-Modern-Distributed-Systems-based-on-Microservices-Architecture.pdf},
	urldate = {2022-09-17},
	volume = {12},
	number = {2},
	issn = {2158107X},
	journal = {International Journal of Advanced Computer Science and Applications},
	doi = {10.14569/IJACSA.2021.0120220},
	file = {Shabani, M{\"e}ziu et al 2021 - Design of Modern Distributed Systems:Attachments/Shabani, M{\"e}ziu et al 2021 - Design of Modern Distributed Systems.pdf:application/pdf}
}


